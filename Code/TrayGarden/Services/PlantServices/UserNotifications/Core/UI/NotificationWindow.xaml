<Window x:Class="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:a="clr-namespace:TrayGarden.Services.PlantServices.UserNotifications.Core.UI"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helpers="clr-namespace:TrayGarden.Services.PlantServices.UserNotifications.Core.UI.HelpContent"
        mc:Ignorable="d"
        
        Title="NotificationWindow" 
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        Topmost="True" 
        WindowStyle="None"
        AllowsTransparency="True" 
        
        MinHeight="{Binding Path=PositionAndSize.MandatoryHeight, FallbackValue=120}"
        MaxHeight="{Binding Path=PositionAndSize.MandatoryHeight, FallbackValue=120}"
        MinWidth="{Binding Path=PositionAndSize.MandatoryWidth, FallbackValue=400}"
        MaxWidth="{Binding Path=PositionAndSize.MandatoryWidth, FallbackValue=400}"
        helpers:WindowPropertySetter.TopPosition="{Binding Path=PositionAndSize.Top, FallbackValue=100}"
        helpers:WindowPropertySetter.LeftPosition="{Binding Path=PositionAndSize.Left, FallbackValue=100}"
        
        
        d:DesignHeight="120"
        d:DesignWidth="400" d:DataContext="{d:DesignInstance a:NotificationWindowVM}">
    <Window.Background>#D1FFD6</Window.Background>
    <Window.Resources>
        <Style x:Key="FlatButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HideButton" TargetType="Button" BasedOn="{StaticResource FlatButtonStyle}" >
            <Setter Property="Background" Value="#E5EEEA" />
            <Setter Property="helpers:WindowPropertySetter.BackgroundColor" Value="#D1FFD6" />
            <Setter Property="Foreground" Value="Gray" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="HideButtonAnimation">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                FillBehavior="HoldEnd"
                                                To="#f0f0f0"
                                                Duration="0:0:0.1"/>
                                <ColorAnimation Storyboard.TargetProperty="(helpers:WindowPropertySetter.BackgroundColor).(SolidColorBrush.Color)" 
                                                FillBehavior="HoldEnd"
                                                To="#FCFCFC"
                                                Duration="0:0:0.1"/>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" 
                                                FillBehavior="HoldEnd"
                                                To="LightGray"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="HideButtonAnimation" />
                    </Trigger.ExitActions>
                    <!--<Setter Property="Background" Value="#f0f0f0" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="helpers:WindowPropertySetter.BackgroundColor" Value="#FCFCFC" />-->
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        <Style x:Key="HideForeverButton" TargetType="Button" BasedOn="{StaticResource FlatButtonStyle}">
            <Setter Property="Background" Value="#A7F4C3" />
            <Setter Property="Foreground" Value="#4E9E4B"/>
            <Setter Property="helpers:WindowPropertySetter.Opacity" Value="1.0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
            <Setter Property="Visibility" Value="{Binding Path=DisplayPermanentlyCloseButton, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='collapsed'}" />


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="HideForeverAnimation">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                FillBehavior="HoldEnd"
                                                To="#FA1717"
                                                Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="(helpers:WindowPropertySetter.Opacity)"
                                                 To="0.7"
                                                 FillBehavior="HoldEnd"
                                                 Duration="0:0:2"
                                                 BeginTime="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="HideForeverAnimation" />
                    </Trigger.ExitActions>
                    <!-- <Setter Property="Background" Value="#FA1717" />
                    <Setter Property="helpers:WindowPropertySetter.Opacity" Value="0.7" />-->
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="NormalClosingAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(Window.Opacity)"
                                     To="0.0"
                                     BeginTime="{Binding Path=DelayBeforeNormalFading, FallbackValue=0:0:2}"
                                     Duration="{Binding Path=NormalFadingDuration, FallbackValue=0:0:2}"
                                     FillBehavior="HoldEnd" />
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(a:NotificationWindow.ReadyToBeClosed)" 
                                            BeginTime="{Binding DelayBeforeNormalClosing, FallbackValue=0:0:4}">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ForceClosingAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(Window.Opacity)"
                                     To="0.0"
                                     BeginTime="{Binding Path=DelayBeforeForceFading, FallbackValue=0:0:0}"
                                     Duration="{Binding Path=ForceFadingDuration, FallbackValue=0:0:0.5}"
                                     FillBehavior="HoldEnd" />
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(a:NotificationWindow.ReadyToBeClosed)"
                                            BeginTime="{Binding DelayBeforeForceClosing, FallbackValue=0:0:0.5}">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Name="WindowFadingStoryboard" Storyboard="{DynamicResource NormalClosingAnimation}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter">
            <StopStoryboard BeginStoryboardName="WindowFadingStoryboard" />
            <StopStoryboard BeginStoryboardName="ForceWindowClosingAnimation" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave">
            <BeginStoryboard Name="ForceWindowClosingAnimation" Storyboard="{DynamicResource ForceClosingAnimation}" />
        </EventTrigger>
    </Window.Triggers>


    <Border BorderThickness="1" BorderBrush="SeaGreen">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35*" />
                <ColumnDefinition  Width="75*" />
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource HideButton}" Command="{Binding Path=CloseCommand}">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="100"  Padding="0 0 0 10">X</TextBlock>
            </Button>
            <Button Grid.Column="1" Panel.ZIndex="10" x:Name="CloseForeverButton" Style="{StaticResource HideForeverButton}" Command="{Binding Path=PermanentCloseCommand}">
                <TextBlock  Margin="3" FontWeight="Bold" FontSize="8">XX</TextBlock>
            </Button>
            <Popup Placement="Mouse" IsOpen="{Binding ElementName=CloseForeverButton, Path=IsMouseOver, Mode=OneWay}">
                <TextBlock FontSize="16" Foreground="Black" Background="White" Padding="8" Text="{Binding Path=PermanentCloseDescription, FallbackValue='Disable such notifications at all!'}" />
            </Popup>
            <UserControl Grid.Column="1">
                <MultiBinding Converter="{StaticResource MappingsBasedContentValueConverter}">
                    <Binding Path="NestedNotificationVM" />
                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}" />
                </MultiBinding>
            </UserControl>
        </Grid>
    </Border>
</Window>
