<?xml version="1.0"?>

<configuration>
  <configSections>
    <section name="trayGarden" type="TrayGarden.Configuration.SectionHandler, TrayGarden" />
  </configSections>

  <trayGarden>

    <modernFactory type="TrayGarden.Configuration.ModernFactory, TrayGarden" />

    <!--It's a test object to test Factory functionality. Should be removed before release-->
    <mock type="TrayGarden.MockType">
      <StrValue>HelloStr</StrValue>
      <IntValue>15</IntValue>
      <BoolValue>True</BoolValue>
      <ObjValue>
        <mock2 type="TrayGarden.MockType">
          <IntValue>25</IntValue>
        </mock2>
      </ObjValue>
      <IntList hint="addlist">
        <value1>10</value1>
        <value2>20</value2>
        <value3>30</value3>
      </IntList>
      <StrList hint="addlist">
        <value1>first</value1>
        <value2>second</value2>
      </StrList>

      <NullList hint="newlist">
        <templates>
          <test>
            <obj type="TrayGarden.MockType">
              <StrValue>{str}</StrValue>
              <IntList hint="addlist">
                <templates>
                  <test2>
                    <value>{intv}</value>
                  </test2>
                </templates>
                <items xpathfrom="int" />
              </IntList>
            </obj>
          </test>
        </templates>
        <items templateXPath="test">
          <item str="firstT">
            <int intv="45" />
            <int intv="65" />
          </item>
          <item str="secondT" />
        </items>
      </NullList>

      <ObjList hint="addlist">
        <value>
          <obj type="TrayGarden.MockType" />
        </value>
        <value>
          <obj type="TrayGarden.MockType" />
        </value>
      </ObjList>
      <MethodInt hint="invoke">
        <firstParam>75</firstParam>
      </MethodInt>
      <MethodStr hint="invoke">
        <firstParam>Hello Alex</firstParam>
      </MethodStr>
      <!--<MethodObj hint="invoke" argTypes="System.Int32|System.Object">
        <somearg>25</somearg>
        <mock2 type="TrayGarden.MockType">
          <IntValue>25</IntValue>
        </mock2>
      </MethodObj>-->
    </mock>

    <!-- Resource manager, which is implemented to get resource by key from assemblies -->
    <resourceManager type="TrayGarden.Resources.MultisourceResourcesManager">
      <Sources hint="addlist">
        <templates>
          <simpleSource>
            <source type="TrayGarden.Resources.AssemblySource">
              <Initialize hint="invoke">
                <AssemblyName>{assembly}</AssemblyName>
                <ResourcePath>{path}</ResourcePath>
              </Initialize>
            </source>
          </simpleSource>
        </templates>

        <!-- DEFINE RESOURCE SOURCES HERE -->
        <items templateXPath="simpleSource">
          <source assembly="TrayGarden" path="TrayGarden.Resources.GlobalResources" />
        </items>
      </Sources>
    </resourceManager>

    <pipelineManager type="TrayGarden.Pipelines.Engine.PipelineManager">
      <Initialize hint="invoke">
        <pipelines type="newlist:TrayGarden.Pipelines.Engine.Pipeline">
          <templates>
            <!-- A bit complicated template for providing Sitecore style pipelines defitions -->
            <sitecoreStyle>
              <pipeline type="TrayGarden.Pipelines.Engine.Pipeline">
                <Initialize hint="invoke">
                  <argumentTypeStr>{argType}</argumentTypeStr>
                  <name>{name}</name>
                  <processors type="newlist:TrayGarden.Pipelines.Engine.Processor">
                    <templates>
                      <simpleProcessor>
                        <processor type="TrayGarden.Pipelines.Engine.Processor">
                          <Initialize hint="invoke">
                            <processorObject type="{type}" />
                            <argumentTypeStr>{argType}</argumentTypeStr>
                          </Initialize>
                        </processor>
                      </simpleProcessor>
                    </templates>
                    <items templateXPath="simpleProcessor" xpathfrom="processor" />
                  </processors>
                </Initialize>
              </pipeline>
            </sitecoreStyle>
          </templates>

          <!-- DEFINE PIPELINES HERE -->
          <items templateXPath="sitecoreStyle">
            <pipeline name="simple" argType="TrayGarden.Pipelines.Simple.SomeArgs">
              <processor type="TrayGarden.Pipelines.Simple.SomeProcessor" />
            </pipeline>
          </items>
        </pipelines>
      </Initialize>

    </pipelineManager>

    <!-- My custom IoC bicycle :) -->
    <typeHatcherManager type="TrayGarden.TypesHatcher.HatcherManager">
      <Initialize hint="invoke">
        <mappings type="newlist:TrayGarden.TypesHatcher.IMapping">
          <templates>
            <instanceReferenced>
              <mapping type="TrayGarden.TypesHatcher.Mapping">
                <Initialize hint="invoke">
                  <interfaceType>{interface}</interfaceType>
                  <objectFactory type="TrayGarden.Configuration.SimpleObjectFactory">
                    <ConfigurationPath>{instanceRef}</ConfigurationPath>
                  </objectFactory>
                </Initialize>
              </mapping>
            </instanceReferenced>
          </templates>

          <!-- DEFINE MAPPINGS HERE -->
          <items templateXPath="instanceReferenced">
            <mapping interface="TrayGarden.Resources.IResourcesManager" instanceRef="resourceManager" />
            <mapping interface="TrayGarden.Pipelines.Engine.IPipelineManager" instanceRef="pipelineManager" />
            <mapping interface="TrayGarden.Features.Contracts.IFeatureRuntimeSettings" instanceRef="features/runtimeSettingsManager" />
          </items>
        </mappings>
      </Initialize>
    </typeHatcherManager>

    <features>
      <runtimeSettingsManager type="TrayGarden.Features.RuntimeSettings.RuntimeSettingsManager">
        <!--Interval in seconds. If zero - disabled -->
        <autoSaveInterval>0</autoSaveInterval>
        <Initialize hint="invoke">
          <storageProvider type="TrayGarden.Features.RuntimeSettings.Provider.SettingsStorage">
            <FileName>RuntimeSettings.xml</FileName>
            <!--If false, will use folder in ApplicationData -->
            <UseLocalFolder>true</UseLocalFolder>
            <Initialize hint="invoke">
              <containerFactory type="objectfactory:TrayGarden.Features.RuntimeSettings.Provider.Container" />
            </Initialize>
          </storageProvider>
        </Initialize>
      </runtimeSettingsManager>
    </features>

    <!-- A NODE FOR SOME SIMPLE COMPONENTS-->
    <bricks>
      
    </bricks>

    <settings>
      <setting name="ApplicationData.FolderName" value="TrayGarden" />
    </settings>
  </trayGarden>


  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
</configuration>